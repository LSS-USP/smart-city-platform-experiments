#!/bin/sh

FILE_DIR=`perl -e 'use Cwd "abs_path";print abs_path(shift)' $0`
BASE_DIR=`dirname $FILE_DIR`/..
CLUSTER=cluster-xp
ZONE=us-central1-f
MACHINE_TYPE=n1-standard-1
NUM_NODES=4

verify () {
  if [ $? != 0 ]; then
    echo "$1"
    exit 2
  fi
}

create_cluster () {
  echo "Creating the cluster"

  gcloud container clusters create $CLUSTER --zone $ZONE --machine-type $MACHINE_TYPE --num-nodes $NUM_NODES --preemptible
  #gcloud deployment-manager deployments create cluster --config cluster/cluster.yaml 
  gcloud container clusters get-credentials $CLUSTER 
}

create_pods () {
  echo "Creating postgres service"
  kubectl create -f kubernetes/objects/postgres.yaml 
  
  echo "Preparing database"
  kubectl create -f kubernetes/objects/kong_migration_postgres.yaml 
  kubectl delete -f kubernetes/objects/kong_migration_postgres.yaml
  
  echo "Deploying Kong"
  kubectl create -f kubernetes/objects/kong_postgres.yaml
}

delete_cluster() {
  echo "Deleting the cluster"
  gcloud container clusters delete $CLUSTER --zone $ZONE
  echo "Cluster deleted!"
}

delete_pods() {
  echo "Deleting postgres service"
  kubectl delete -f kubernetes/objects/postgres.yaml 
  
  echo "Deleting Kong"
  kubectl delete -f kubernetes/objects/kong_postgres.yaml
}

if [ "$1" = "create-all" ]; then
  create_cluster
  create_pods
fi

if [ "$1" = "create-pods" ]; then
  create_pods
fi

if [ "$1" = "delete-all" ]; then
 delete_pods
 delete_cluster
fi

if [ "$1" = "delete-pods" ]; then
 delete_pods
fi
